server:
  port: 10010
spring:
  application:
    name: Demo
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true #注册ip地址
        enabled: true
        # register: true # 注册自身到consul
        deregister: true # 服务停止时取消注册
        service-name: ${spring.application.name} # 注册到 Consul 的服务名，默认为 `spring.application.name` 配置项
        health-check-path: /actuator/health # 健康检查的接口，默认为 /actuator/health，由 Spring Boot Actuator 提供
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/tensquare_user?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: root
  jpa:
    hibernate:
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy #默认策略的表现为：表名及字段全小写，并以下划线分隔
    show-sql: true
  redis:
    host: localhost
    port: 6379
    password:  #没设密码留空
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 2
          initial-interval: 5000
  #RabbitMQ可选配置
  # broker端没有收到消费者的ACK(即:消费者异常时)时,是否再次向消费者投递消息(默认为false)
  # 为false时，如果没有收到消费者的ACK，那么会无限投递;设置为true时,默认投递时次数为3此
  #  spring.rabbitmq.listener.simple.retry.enabled=true

  # 设置向消费者投递消息的最大次数
  #spring.rabbitmq.listener.simple.retry.max-attempts=2

  #消息发送交换机确认
  #spring.rabbitmq.publisher-confirms = true
  #消息发送队列回调
  #spring.rabbitmq.publisher-returns = true

  #确认模式
      #AcknowledgeMode.NONE：不确认
      #AcknowledgeMode.AUTO：自动确认
      #AcknowledgeMode.MANUAL：手动确认
  #spring.rabbitmq.listener.simple.acknowledge-mode = manual

  # 投递消息的间隔(单位ms)
  #spring.rabbitmq.listener.simple.retry.initial-interval=2000

